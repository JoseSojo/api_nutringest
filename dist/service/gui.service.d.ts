import AppActions from "src/AppActions";
import { LanguajeService } from "src/languaje/languaje.service";
import CalendarModel from "src/model/calendar.model";
import ConfigCityModel from "src/model/master/city.model";
import ConfigCountryModel from "src/model/master/country.model";
import ConfigMoneyModel from "src/model/master/money.model";
import PaymentMethodModel from "src/model/master/payment.model";
import ConfigStateModel from "src/model/master/state.model";
import ConfigSubscriptionModel from "src/model/master/subsccription.model";
import PrimitiveFoodModel from "src/model/nutri/food.model";
import PresentationModel from "src/model/nutri/presentation.model";
import SupplementModel from "src/model/nutri/supplement.model";
import UnityMeasureModel from "src/model/nutri/unity.model";
import ExchangeListModel from "src/model/quote/exchange.model";
import FoodAllModel from "src/model/quote/food.model";
import MenuModel from "src/model/quote/menu.model";
import QuoteModel from "src/model/quote/quote.model";
import UserModel from "src/model/user.model";
import { Card } from "src/validation/types/DashboardInterface";
import WalletService from "./wallet.service";
import { PrismaService } from "src/prisma/prisma.service";
export default class GuiService {
    private permit;
    private prisma;
    private userModel;
    private countryModel;
    private stateModel;
    private cityModel;
    private moneyModel;
    private paymentMethodModel;
    private subscriptionModel;
    private primitiveFoodModel;
    private presentationModel;
    private supplementModel;
    private unityModel;
    private exchangeListModel;
    private menuModel;
    private foodAllModel;
    private quoteModel;
    private calendarModel;
    private wallet;
    private languaje;
    private lang;
    constructor(permit: AppActions, prisma: PrismaService, userModel: UserModel, countryModel: ConfigCountryModel, stateModel: ConfigStateModel, cityModel: ConfigCityModel, moneyModel: ConfigMoneyModel, paymentMethodModel: PaymentMethodModel, subscriptionModel: ConfigSubscriptionModel, primitiveFoodModel: PrimitiveFoodModel, presentationModel: PresentationModel, supplementModel: SupplementModel, unityModel: UnityMeasureModel, exchangeListModel: ExchangeListModel, menuModel: MenuModel, foodAllModel: FoodAllModel, quoteModel: QuoteModel, calendarModel: CalendarModel, wallet: WalletService, languaje: LanguajeService);
    getAllCards({ permits, name, userId }: {
        permits: string[];
        name: string;
        userId: string;
    }): Promise<Card[]>;
    getCardWallet({ permits, name, userId }: {
        name: string;
        permits: string[];
        userId: string;
    }): Promise<Card[]>;
    getCardsAppAdmin(): Promise<Card[]>;
    getCardsNutriAdmin(): Promise<Card[]>;
    getCardsPatient(): Promise<Card[]>;
    getCardsNutricionist(): Promise<Card[]>;
}
